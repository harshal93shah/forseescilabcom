<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from AlgebraicInterleaver.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="AlgebraicInterleaver" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>AlgebraicInterleaver</refname>
    <refpurpose>The AlgebraicInterleaver object rearranges the elements of its input vector using an algebraically derived permutation.The algebraic interleaver performs all computations in modulo N, where N is the length</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   Y = AlgebraicInterleaver(in,'taco',len,MF,CS)
   Y = AlgebraicInterleaver(in,'weco',len,PE)
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>in:</term>
      <listitem><para>input -  The input must be a  vector in the range [0, N–1].</para></listitem></varlistentry>
   <varlistentry><term>len:</term>
      <listitem><para> Length-Number of elements in input vector.Specify the number of elements in the input as a positive, integer, scalar.the value of (N+1) must be a prime number, where N is Length  for Welch-Costas method</para></listitem></varlistentry>
   <varlistentry><term>meth:</term>
      <listitem><para>Takeshita-Costello method or Welch-Costas method</para></listitem></varlistentry>
   <varlistentry><term>MF:</term>
      <listitem><para>MultiplicativeFactor-specify the factor the object uses to compute the cycle vector for the interleaver as a positive, integer, scalar.</para></listitem></varlistentry>
   <varlistentry><term>CS:</term>
      <listitem><para>CyclicShift-specify the amount by which the object shifts indices, when it creates the final permutation vector, as a nonnegative, integer, scalar</para></listitem></varlistentry>
   <varlistentry><term>PF:</term>
      <listitem><para>PrimitiveElement- You must set the PrimitiveElement property to an integer,  between 1 and N.This integer represents a primitive element of the finite field GF(N+1).</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
The algebraic deinterleaver performs all computations in modulo N, where N is the length
The Algebraic Interleaver block rearranges the elements of its input vector using a permutation that is algebraically derived. The Number of elements parameter, N, indicates how many numbers are in the input vector. This block accepts a column vector input signal.
The block accepts the following data types: int8, uint8, int16, uint16, int32, uint32, boolean, single, double, and fixed-point. The output signal inherits its data type from the input signal.
The Type parameter indicates the algebraic method that the block uses to generate the appropriate permutation table. Choices are Takeshita-Costello and Welch-Costas. Each of these methods has parameters and restrictions that are specific to it:
If you set Type to Welch-Costas, then N + 1 must be prime. The Primitive element parameter is an integer, A, between 1 and N that represents a primitive element of the finite field GF(N + 1). This means that every nonzero element of GF(N + 1) can be expressed as A raised to some integer power.
In a Welch-Costas interleaver, the permutation maps the integer k to mod(Ak,N + 1) - 1.
If you set Type to Takeshita-Costello, then N must be 2m for some integer m. The Multiplicative factor parameter, k, must be an odd integer less than N. The Cyclic shift parameter, h, must be a nonnegative integer less than N.
A Takeshita-Costello interleaver uses a length-N cycle vector whose nth element is
c(n)=mod(k⋅n⋅(n−1)/2,N)+1, n
for integers n between 1 and N. The intermediate permutation function is obtained by using the following relationship:
Π(c(n))=c(n+1)
where
n=1:N
The interleaver's actual permutation vector is the result of cyclically shifting the elements of the permutation vector, π, by the Cyclic shift parameter, h.
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
y=AlgebraicInterleaver([1 2 3 4 5 6 ].','weco',6,3)
y  =
1.    3.    2.    6.    4.    5.
   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Harshal Shah</member>
   </simplelist>
</refsection>
</refentry>
